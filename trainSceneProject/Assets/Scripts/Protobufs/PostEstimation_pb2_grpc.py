# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import PostEstimation_pb2 as PostEstimation__pb2


class PostEstimationServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPoseEstimation = channel.unary_unary(
        '/protocolor.PostEstimationService/GetPoseEstimation',
        request_serializer=PostEstimation__pb2.ImageInfo.SerializeToString,
        response_deserializer=PostEstimation__pb2.PoseEstimationResponse.FromString,
        )


class PostEstimationServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPoseEstimation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PostEstimationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPoseEstimation': grpc.unary_unary_rpc_method_handler(
          servicer.GetPoseEstimation,
          request_deserializer=PostEstimation__pb2.ImageInfo.FromString,
          response_serializer=PostEstimation__pb2.PoseEstimationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protocolor.PostEstimationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
